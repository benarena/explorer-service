buildscript {
    rootProject.apply {
        from(rootProject.file("versions.gradle"))
    }
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://mvnrepository.com/artifact" }
        maven { url "https://repo.spring.io/plugins-release" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springboot_version"
        classpath 'io.spring.gradle:propdeps-plugin:0.0.10.RELEASE'
    }
}

// Provides git.properties
plugins {
//    id "com.gorylenko.gradle-git-properties" version "1.5.2"
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'propdeps'

apply plugin: 'kotlin-spring'
apply plugin: 'kotlin-kapt'

sourceSets {
    test.kotlin.srcDirs = ['src/test/kotlin']
    test.resources.srcDirs = ['src/test/resources']
    integrationTest {
        java {
            compileClasspath += sourceSets.main.output + sourceSets.test.output + configurations.testRuntime + configurations.testCompile
            runtimeClasspath += output + compileClasspath + test.output
            srcDirs = ['src/test/kotlin']
        }
        resources.srcDir file('src/test/resources')
    }
}

bootJar {
    baseName = 'provenance-explorer'
}

configurations.all {
    exclude group: 'log4j'
}


dependencies {

    api project(":database")

    api group: 'io.provenance', name: 'core-encryption', version: "$provenance_core", changing: true
    api group: 'io.provenance', name: 'core-proto', version: "$provenance_core", changing: true
    api group: 'io.provenance', name: 'core-db-exposed', version: "$provenance_core", changing: true, force: true
    api group: 'io.provenance', name: 'core-domain', version: "$provenance_core", changing: true
    api group: 'io.provenance', name: 'core-extensions', version: "$provenance_core", changing: true
    api group: 'io.provenance.pbc', name: 'simple-client', version: "$provenance_core", changing: true
    api group: 'io.p8e', name: 'p8e-util', version: "$provenance_core", changing: true

    implementation ("io.provenance.sdk:provenance-sdk-signer:$provenance_sdk") {
        exclude group: 'io.provenance.pbc'
        exclude group: 'io.provenance', module: 'core-client'
        exclude group: 'io.provenance', module: 'core-domain'
        exclude group: 'io.provenance', module: 'core-encryption'
        exclude group: 'io.provenance', module: 'core-extensions'
        exclude group: 'io.provenance', module: 'core-kafka'
        exclude group: 'io.provenance', module: 'core-kafka-retry'
        exclude group: 'io.provenance', module: 'core-kcache'
        exclude group: 'io.provenance', module: 'core-proto'
        exclude group: 'io.provenance', module: 'core-topics'
    }

    // kethereum
    implementation "com.github.komputing.kethereum:bip39:$kethereum_version"

    // kotlin
    api "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    api "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
    api group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: '1.0.0'

    // springboot
    api group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: "$springboot_version"
    api group: 'org.springframework.boot', name: 'spring-boot-devtools', version: "$springboot_version"
    api group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc', version: "$springboot_version"
    api group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: "$springboot_version"
    api group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: "$springboot_version"
    api group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: "$springboot_version"
    api group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: "$springboot_version"
    api group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: "$springboot_version"
    kapt group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: "$springboot_version"
    optional group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: "$springboot_version"

    implementation group: 'io.github.openfeign', name: 'feign-jackson', version: feign_version
    implementation group: 'io.github.openfeign', name: 'feign-httpclient', version: feign_version

    //postgres
    implementation group: "org.postgresql", name: "postgresql", version: "$postgres_version"

    // log
    api group: 'ch.qos.logback.contrib', name: 'logback-json-core', version: '0.1.5'
    api group: 'ch.qos.logback.contrib', name: 'logback-json-classic', version: '0.1.5'
    api group: 'ch.qos.logback.contrib', name: 'logback-jackson', version: '0.1.5'

    //jackson
    api "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"
    api group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: "$jackson_version"
    api group: 'com.hubspot.jackson', name: 'jackson-datatype-protobuf', version: '0.9.10-jackson2.9-proto3'
    api group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.5.1'

    // flyway
    api group: 'org.flywaydb', name: 'flyway-core', version: "$flyway_version"

    // swagger-ui
    api group: 'io.springfox', name: 'springfox-swagger-ui', version: "$swagger_version"
    api("io.springfox:springfox-swagger2:$swagger_version") {
        exclude module: 'mapstruct'
    }

    // jetbrains exposed
    api group: 'org.jetbrains.exposed', name: 'exposed', version: "$exposed_version"

    testImplementation group: "org.springframework.boot", name: "spring-boot-starter-test", version: "$springboot_version"
}

dependencyManagement {
    resolutionStrategy {
        cacheChangingModulesFor 0, 'seconds'
    }
}

//Spring boot settings
def profiles = System.getenv("SPRING_PROFILES_ACTIVE") ?: "development"

bootRun {
    args = ["--spring.profiles.active=" + profiles]
}

springBoot {
    mainClassName = 'io.provenance.explorer.ApplicationKt'
}

// Disable spring boot dev tools when building for production
println('\nExclude Spring Boot Dev tools? ' + version.contains('master'))
bootJar {
    excludeDevtools = version.contains('master')
}



